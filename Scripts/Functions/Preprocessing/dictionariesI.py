#!/usr/bin/env python
# -*- coding: utf-8 -*-

# File-Name:    dictionariesI.py
# Version:      0.0.7 

typeTrialDicI = {3001:'abort at the first step',
3000:'error break fixation at any step',
3:'final reward on',
3002:'break fixation target delay',
3003:'break fixation during cursor 0',
3103:'break fixation during cursor 1',
3203:'break fixation during cursor 2',
3303:'break fixation during cursor 3',
3403:'break fixation during cursor 4',
3004:'break fixation during pause 0',
3104:'break fixation during pause 1',
3204:'break fixation during pause 2',
3304:'break fixation during pause 3',
3404:'break fixation during pause 4',
3105:'anticipates choice on step 1',
3205:'anticipates  choice on step 2',
3305:'anticipates  choice on step 3',
3405:'anticipates  choice on step 4',
3106:'late saccade after eyein 1',
3206:'late saccade after eyein 2',
3306:'late saccade after eyein 3',
3406:'late saccade after eyein 4',
3107:'wrong choice in step 1',
3207:'wrong choice in step 2',
3307:'wrong choice in step 3',
3407:'wrong choice in step 4'}

period_plot_name_dictI = {'TRGDLY':'Target',
               'UNFIXTG11_ON':'Choices 1', 
               'FIXTG0_OFF':'Go 1',
               'UNFIXTG21_ON':'Choices 2',
               'FIXTG11_OFF':'Go 2',
               'TRGDLY_all':'Target',
               'UNFIXTG11_ON_all':'Choices 1', 
               'FIXTG0_OFF_all':'Go 1',
               'UNFIXTG21_ON_2step':'Choices 2 (2 steps)',
               'FIXTG11_OFF_2step':'Go 2 (2 steps)',
                'UNFIXTG21_ON_4step':'Choices 2 (4 steps)',
               'FIXTG11_OFF_4step':'Go 2 (4 steps)',
                'UNFIXTG31_ON_4step':'Choices 3', 
               'FIXTG21_OFF_4step':'Go 3',
               'UNFIXTG41_ON_4step':'Choices 4',
               'FIXTG31_OFF_4step':'Go 4'}

monkeyNameDicI = {'v':'Viking','u':'Uriel','V':'Viking','U':'Uriel'}

stepNumDicI = {50:4,51:2}

# Location code dictionaries
'''
import pandas as pd
import_loc = spikesDataII+'230413/'
areal_data = pd.read_excel(import_loc+'Recording areas_detail.xlsx',sheet_name='machine_readableI').fillna('Other')
arealDicI = dict(zip(areal_data['Area'].to_list(),areal_data['New group'].to_list()))
'''
arealDicI = {'Insula(11l)': 'Other',
 'Insula(12l)': 'vPFC',
 'Insula(12l-12m)': 'vPFC',
 'Insula(12m)': 'Other',
 'Insula(12o)': 'Insula',
 'Insula(12o-Iai)': 'Insula',
 'Insula(12r)': 'vPFC',
 'Insula(13l)': 'Insula',
 'Insula(13l-12o)': 'Insula',
 'Insula(13l-Iai)': 'Insula',
 'Insula(Iai)': 'Insula',
 'Insula(Iapl)': 'Other',
 'Insula(Iapl-Ial)': 'Other',
 'PS(46d)': 'PS',
 'PS(46d-46v)': 'PS',
 'PS(46v)': 'PS',
 'PS(8A)': 'dPFC',
 'PrCO': 'Other',
 'asl(44-45)': 'vPFC',
 'asl(44-45)-FEF': 'vPFC',
 'asl(45)': 'vPFC',
 'asl(8A-45)': 'vPFC',
 'asl(8A-F5)': 'vPFC',
 'asu(8A)': 'Other',
 'asu(F2)': 'Other',
 'cis(24c)': 'dmPFC',
 'cis(24c-F3SMA)': 'dmPFC',
 'cis(8Bm)': 'dmPFC',
 'cis(9m)': 'dmPFC',
 'cis(F3SMA)': 'dmPFC',
 'cis(F6)': 'dmPFC',
 'cis(F6preSMA)': 'dmPFC',
 'dPFC(8A)': 'dPFC',
 'dPFC(8B)': 'dPFC',
 'dPFC(8Bd)': 'dPFC',
 'dPFC(8Bm)': 'dmPFC',
 'dPFC(9d)': 'dPFC',
 'dPFC(9m)': 'dmPFC',
 'dPM(F2)': 'dlPM',
 'dPM(F3SMA)': 'Other',
 'dPM(F6)': 'dmPFC',
 'dPM(F6-F7)': 'dmPFC',
 'dPM(F7)': 'dlPM',
 'putamen': 'Other',
 'vPFC(45)': 'vPFC',
 'vPFC(45)-Insula(12l)': 'vPFC',
 'vPFC(8A)': 'vPFC',
 'vPFC(F5)': 'Other',
 'vPM(F4)': 'Other',
 'vPM(F5)+PrCO': 'Other'}

# Updated location code dictionaries (May 2024)
'''
import pandas as pd
import_loc = spikesDataII+'230413/'
areal_data = pd.read_excel(import_loc+'Summary_areas_neurons_sessions(Jan24).xlsx',sheet_name='machine_readableI').fillna('Other')
arealDicII = dict(zip(areal_data['Area'].to_list(),areal_data['New group'].to_list()))
'''
arealDicII = {'Insula(11l)': 'Other',
 'Insula(12l)': 'Other',
 'Insula(12l-12m)': 'Other',
 'Insula(12m)': 'Other',
 'Insula(12o)': 'Insula',
 'Insula(12o-Iai)': 'Insula',
 'Insula(12r)': 'Other',
 'Insula(13l)': 'Insula',
 'Insula(13l-12o)': 'Insula',
 'Insula(13l-Iai)': 'Insula',
 'Insula(Iai)': 'Insula',
 'Insula(Iapl)': 'Other',
 'Insula(Iapl-Ial)': 'Other',
 'PS(46d)': 'PS',
 'PS(46d-46v)': 'PS',
 'PS(46v)': 'PS',
 'PS(8A)': 'dPFC',
 'PrCO': 'Other',
 'asl(44-45)': 'vPFC',
 'asl(44-45)-FEF': 'vPFC',
 'asl(45)': 'vPFC',
 'asl(8A-45)': 'vPFC',
 'asl(8A-F5)': 'vPFC',
 'asu(8A)': 'Other',
 'asu(F2)': 'Other',
 'cis(24c)': 'dmPFC',
 'cis(24c-F3SMA)': 'dmPFC',
 'cis(8Bm)': 'dmPFC',
 'cis(9m)': 'dmPFC',
 'cis(F3SMA)': 'dmPFC',
 'cis(F6)': 'dmPFC',
 'cis(F6preSMA)': 'dmPFC',
 'dPFC(8A)': 'dPFC',
 'dPFC(8B)': 'dPFC',
 'dPFC(8Bd)': 'dPFC',
 'dPFC(8Bm)': 'dmPFC',
 'dPFC(9d)': 'dPFC',
 'dPFC(9m)': 'dmPFC',
 'dPM(F2)': 'dlPM',
 'dPM(F3SMA)': 'Other',
 'dPM(F6)': 'dmPFC',
 'dPM(F6-F7)': 'dmPFC',
 'dPM(F7)': 'dlPM',
 'putamen': 'Other',
 'vPFC(45)': 'vPFC',
 'vPFC(45)-Insula(12l)': 'vPFC',
 'vPFC(8A)': 'vPFC',
 'vPFC(F5)': 'Other',
 'vPM(F4)': 'Other',
 'vPM(F5)+PrCO': 'Other'}
